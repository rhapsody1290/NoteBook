/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sina.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.sina.util.HibernateUtil;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.sina.domain.Users;

import com.sina.service.imp.UsersServiceImp;
import com.sina.service.inter.UsersServiceInter;
import com.sina.struts.form.UserForm;

/**
 * MyEclipse Struts
 * Creation date: 05-30-2011
 * <p/>
 * XDoclet definition:
 *
 * @struts.action parameter="flag"
 */
public class LoginAction extends DispatchAction {
    /*
	 * Generated Methods
	 */

    /**
     * 这里我们响应login请求
     */
    public ActionForward login(ActionMapping mapping, ActionForm form,
                               HttpServletRequest request, HttpServletResponse response) {
        // TODO Auto-generated method stub
        UserForm userForm = (UserForm) form;
        //使用service完成到数据库的验证
        //	UsersServiceImp usersService=new UsersServiceImp();//?这里直接使用对象,有定义耦合 web<-->业务层
        //通过接口来调用.
        UsersServiceInter usersServiceInter = new UsersServiceImp();
        //构建一个Users对象
        Users user = new Users();
        //String ->Integer
        user.setUserid(Integer.parseInt(userForm.getUserid()));
        user.setUserpwd(userForm.getUserpwd());
        user = usersServiceInter.checkUser(user);
        if (user != null) {
            //合法,将user对象放入session,后有用
            request.getSession().setAttribute("userinfo", user);
            return mapping.findForward("loginok");
        } else {
            return mapping.findForward("goLoginUi");
        }

    }

    /**
     * 这里我们响应logout请求
     */
    public ActionForward logout(ActionMapping mapping, ActionForm form,
                                HttpServletRequest request, HttpServletResponse response) {
        //清空session
        request.getSession().invalidate();
        return mapping.findForward("goLoginUi");

    }
}